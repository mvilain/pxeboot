---
# tasks file for pxeboot on debian
# a lot of this came from
# https://www.howtoforge.com/setting-up-a-pxe-install-server-for-multiple-linux-distributions-on-debian-lenny
# modified to pull stretch instead of lenny
# https://debian-administration.org/article/478/Setting_up_a_server_for_PXE_network_booting
# setup tftpd-hpa this way
# https://alephnull.uk/build-linux-cluster-pxe-dhcp-tftp-nfs
# https://askubuntu.com/questions/1121131/failed-to-load-ldlinux-c32-when-booting-off-pxe
# added syslinux pxelinux initramfs-tools packages

#ansible_os_family = dict(
#  RedHat = 'RedHat', Fedora = 'RedHat', CentOS = 'RedHat', Scientific = 'RedHat',
#  SLC = 'RedHat', Ascendos = 'RedHat', CloudLinux = 'RedHat', PSBM = 'RedHat',
#  OracleLinux = 'RedHat', OVS = 'RedHat', OEL = 'RedHat', Amazon = 'RedHat',
#  XenServer = 'RedHat', Ubuntu = 'Debian', Debian = 'Debian', SLES = 'Suse',
#  SLED = 'Suse', OpenSuSE = 'Suse', SuSE = 'Suse', Gentoo = 'Gentoo',
#  Archlinux = 'Archlinux', Mandriva = 'Mandrake', Mandrake = 'Mandrake',
#  Solaris = 'Solaris', Nexenta = 'Solaris', OmniOS = 'Solaris', OpenIndiana = 'Solaris',
#  SmartOS = 'Solaris', AIX = 'AIX', Alpine = 'Alpine', MacOSX = 'Darwin',
#  FreeBSD = 'FreeBSD', HPUX = 'HP-UX'
#)

#- block:
#  - debug: var=ansible_os_family
#  - debug: var=ansible_distribution
#  - debug: var=ansible_distribution_major_version
#  - debug: var=ansible_distribution_release
#  - debug: var=ansible_distribution_version

- name: PXE PACKAGES
  package: name={{ item }} state=present
  with_items:
    - netkit-inetd
    - tftpd-hpa
    - isc-dhcp-server
    - lftp
    - syslinux 
    - pxelinux
    - initramfs-tools
    - ntp
    - ntpdate
    - net-tools

- name: DHCP CONFIGURE
  template:
    src: dhcpd.conf.j2
    dest: /etc/dhcp/dhcpd.conf
    backup: yes
    owner: root
    group: root
    mode: "644"
  notify:
    - restart_dhcp_service

# - debug: var=ansible_interfaces
- name: DHCP DEFAULTS
  template:
    src: isc-dhcp-server.j2
    dest: /etc/default/isc-dhcp-server
    backup: yes
    owner: root
    group: root
    mode: "644"
  notify:
    - restart_dhcp_service

- name: DHCP SYSLOG
  copy:
    content: "local0.debug				/var/log/dhcpd.log"
    dest: /etc/rsyslog.d/30-dhcp
    owner: root
    group: root
    mode: "644"

- name: DHCP LOGROTATE
  copy:
    src: logrotate-dhcp
    dest: /etc/logrotate.d/dhcp
    owner: root
    group: root
    mode: "644"

# install sets service as enabled automagically
- name: DHCP SERVICE
  service: 
    name: isc-dhcp-server 
    enabled: yes 
    state: started

- name: INETD configure
  copy:
    src: inetd.conf
    dest: /etc/inetd.conf
    backup: yes
    owner: root
    group: root
    mode: "644"
  notify:
    - restart_inetd_service

- name: TFTPBOOT DIRECTORY
  file:
    path: /var/lib/tftpboot
    state: directory
    owner: tftp
    group: tftp
    mode: "755"

- name: TFTPD-HPA CONF
  copy:
    src: tftpd-hpa
    dest: /etc/default/tftpd-hpa
    backup: yes
    owner: root
    group: root
    mode: "644"
  notify:
    - restart_tftp_server

- name: TFPT-HPA SERVICE
  service: 
    name: tftpd-hpa 
    state: restarted 
    enabled: yes

- include_tasks: "{{ ansible_distribution }}_tasks.yml"

- name: TFTPBOOT FILES
  copy:
    src: "{{ item }}"
    dest: /var/lib/tftpboot/
    remote_src: yes
  with_items:
    - /usr/lib/syslinux/modules/bios/ldlinux.c32
    - /usr/lib/PXELINUX/pxelinux.0


# ntp should be installed from common_packages or one of the distro tasks
# configure it by removing the server and pool lines, then add our own
- name: CONFIGURE NTP
  block:
    - lineinfile:
        path: /etc/ntp.conf
        backup: yes
        state: absent
        regexp: "{{ item.regexp }}"
      with_items:
        - { regexp: '^pool\s+.*$' }
        - { regexp: '^server\s+.*$' }
    - lineinfile:
        path: /etc/ntp.conf
        state: present
        regexp: '^pool\s+.*$'
        line: "pool {{ ntp_host }} iburst"
    - service: name="{{ ntp_service }}" state=restarted
    - shell: grep -E "^pool|^#pool|^server|^#server" /etc/ntp.conf
      register: ntp
    - debug: var=ntp.stdout_lines

- name: SET TIMEZONE AND CHECK NTP
  block:
    - timezone: name={{ timezone }}
    - shell: sleep 8; date
      register: tod 
    - command: ntpq -c peer
      register: ntpq
    - debug: var=ntpq.stdout_lines
